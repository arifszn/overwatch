services:
  app:
    container_name: app
    build:
      context: ./app
      args:
        - APP_PORT=${APP_PORT}
    ports:
      - ${APP_PORT}:${APP_PORT}
    command: npm run dev
    volumes:
      - ./app:/app
      - /app/node_modules
    env_file:
      - .env
    networks:
      - overwatch

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - ${CLICKHOUSE_HTTP_PORT}:8123  # HTTP interface
      - ${CLICKHOUSE_NATIVE_PORT}:9000  # Native interface
    volumes:
      - ./clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql # Initialize the database
      - ./clickhouse/data:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    healthcheck:
      test: ["CMD", "clickhouse-client", "--host=localhost", "--query=SELECT 1"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - overwatch

  vector:
    image: timberio/vector:0.44.0-debian
    container_name: vector
    volumes:
      - ./vector/vector.yaml:/etc/vector/vector.yaml
      - ./app/logs:/app/logs
    depends_on:
      clickhouse:
        condition: service_healthy
    environment:
      - CLICKHOUSE_ENDPOINT=http://clickhouse:${CLICKHOUSE_HTTP_PORT}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    networks:
      - overwatch

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/data:/var/lib/grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=${CLICKHOUSE_NATIVE_PORT}
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - overwatch

networks:
  overwatch:
    driver: bridge